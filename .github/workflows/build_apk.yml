name: Build & Sign & Upload apks

on:
  push:
    tags:
      - 'v*.*.*'
      - 'test*'

jobs:
  build_apk:
    runs-on: ubuntu-latest

    # Itâ€™s convenient to put important variables in env
    env:
      JAVA_VERSION: '17'
      FLUTTER_CHANNEL: 'stable'
      PROPERTIES_PATH: "./android/key.properties"

    steps:
      - uses: actions/checkout@v4

      - name: 'Setup java'
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: ${{ env.JAVA_VERSION }}
          java-package: jdk
          cache: 'gradle'
          #cache-dependency-path: |
          #  ~/*.gradle*
          #  ~/**/gradle-wrapper.properties

      - name: 'Decoding base64 KEYSTORE into a file'
        run: echo "${{ secrets.UPLOAD_KEYSTORE }}" | base64 --decode > android/app/upload-keystore.jks

      - name: 'Creating key.properties file'
        run: |
          echo storePassword=\${{ secrets.STORE_PASSWORD }} > ${{env.PROPERTIES_PATH}}
          echo keyPassword=\${{ secrets.KEY_PASSWORD }} >> ${{env.PROPERTIES_PATH}}
          echo keyAlias=\${{ secrets.KEY_ALIAS }} >> ${{env.PROPERTIES_PATH}}
          echo storeFile=../app/upload-keystore.jks >> ${{env.PROPERTIES_PATH}}

      - name: 'Setup Flutter'
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true
          #cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
          #cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'

      - run: flutter --version
      - run: flutter pub get
      - run: flutter build apk --release --split-per-abi

      - name: "Renaming generated apk's"
        run: | 
          cd build/app/outputs/flutter-apk/
          mv app-arm64-v8a-release.apk quiz-prize-app-${{ github.ref_name }}-arm64-v8a.apk
          mv app-armeabi-v7a-release.apk quiz-prize-app-${{ github.ref_name }}-armeabi-v7a.apk
          mv app-x86_64-release.apk quiz-prize-app-${{ github.ref_name }}-x86_64.apk

      - name: "Upload generated apk's to artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: apk_builds
          path: build/app/outputs/flutter-apk/*.apk

  release:
    runs-on: ubuntu-latest
    needs:
      - build_apk
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: 'Download all artifacts'
        uses: actions/download-artifact@v4
        with:
          path: 'releases'
          merge-multiple: true # everything will be loaded into the folder at `path`

      - name: 'Show release catalog'
        run: ls -R releases

      - name: 'Publishing artifacts to release'
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'releases/*.apk'
          body: "New release. For the full history of changes, see CHANGELOG.MD file."
          #bodyFile: "body.md"
          draft: true
          artifactErrorsFailBuild: true
          allowUpdates: true
